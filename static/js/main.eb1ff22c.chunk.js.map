{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","React","createElement","Fragment","className","style","class","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","Link","to","title","aria-label","aria-current","about","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","Router","document","body","Switch","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.eb1ff22c.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n      let myStyle = {\r\n        color : props.mode==='dark'?'white':'#042743',\r\n        backgroundColor : props.mode ==='dark'?'rgb(36 74 104)':'white'\r\n      }\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"container my-3\" >\r\n        <h1 style={{color:props.mode==='dark'?'white':'#042743'}}>About Us</h1>\r\n      <div class=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n  <div class=\"accordion-item\" style={myStyle}>\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n        <strong>Analyze your text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n      <div class=\"accordion-body\" style={myStyle}>\r\n        TextUtils gives you a way to analyze your text quickly and efficiently.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\" style={myStyle}>\r\n    <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n        <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n      <div class=\"accordion-body\" style={myStyle}>\r\n         TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters . Thus it is suitable for writting text with word/character limit.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\" style={myStyle}>\r\n    <h2 class=\"accordion-header\" id=\"headingThree\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n        <strong>Browser Compatiable</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n      <div class=\"accordion-body\" style={myStyle}>\r\n        This word counter software works in any web browsers such as chrome, firefox, internet, explorer, safari, opera.It suits to count characters in facebook, blog, excel, document, pdf document, essays etc.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title:PropTypes.string,\r\n    about:PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps={\r\n//     title:'Set your title',\r\n//     about:'set your abaout'\r\n// }","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick = () =>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleonchange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleloclick =() =>{\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleclearclick =() =>{\r\n      let newText = \"\";\r\n      setText(newText);\r\n      props.showAlert(\"Text is Cleared\",\"success\");\r\n    }\r\n    const handlecopyclick = () =>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n    const handleresclick = () =>{\r\n      let newText = text.split(/[ ] + /);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const [text,setText] = useState('')\r\n  return (\r\n    <>\r\n    <div>\r\n    <div className=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>  \r\n    <textarea className=\"form-control\" value = {text} onChange ={handleonchange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\" ></textarea>\r\n    </div>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleupclick}>Convert to Uppercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleloclick}>Convert to Lowercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleclearclick}>Clear Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handlecopyclick}>Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleresclick}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length} minutes read</p>\r\n        <h1>Preview</h1>\r\n        <p>{text.length>0?text:\"Enter your text to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) =>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:'60px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n  </div>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport About from './Components/About';\nimport Navbar from'./Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport { useState } from 'react';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      message : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },4000);\n  }\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n   <Navbar title=\"TextUtils\" about=\"About us\" mode ={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container\">\n   <Switch>\n          <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n          <TextForm  showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n          </Route>\n        </Switch>\n   </div>\n   </Router>\n   </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}