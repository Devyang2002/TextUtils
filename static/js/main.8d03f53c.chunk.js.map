{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8d03f53c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a> \r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title:PropTypes.string,\r\n    about:PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps={\r\n//     title:'Set your title',\r\n//     about:'set your abaout'\r\n// }","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick = () =>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleonchange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleloclick =() =>{\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleclearclick =() =>{\r\n      let newText = \"\";\r\n      setText(newText);\r\n      props.showAlert(\"Text is Cleared\",\"success\");\r\n    }\r\n    const handlecopyclick = () =>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n    const handleresclick = () =>{\r\n      let newText = text.split(/[ ] + /);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const [text,setText] = useState('')\r\n  return (\r\n    <>\r\n    <div>\r\n    <div className=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>  \r\n    <textarea className=\"form-control\" value = {text} onChange ={handleonchange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\" ></textarea>\r\n    </div>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleupclick}>Convert to Uppercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleloclick}>Convert to Lowercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleclearclick}>Clear Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handlecopyclick}>Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleresclick}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length} minutes read</p>\r\n        <h1>Preview</h1>\r\n        <p>{text.length>0?text:\"Enter your text to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) =>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:'60px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n  </div>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\n// import About from './Components/About';\nimport Navbar from'./Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport { useState } from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      message : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },4000);\n  }\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n   <Navbar title=\"TextUtils\" about=\"About us\" mode ={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container\">\n   {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About mode={mode}/> */}\n          {/* </Route> */}\n          {/* <Route path=\"/\"> */}\n          <TextForm  showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n   </div>\n   {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}